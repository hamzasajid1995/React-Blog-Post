{"version":3,"file":"static/js/809.746f2431.chunk.js","mappings":"8LACA,GAAgB,UAAY,4BAA4B,UAAY,4BAA4B,QAAU,0BAA0B,QAAU,0BAA0B,YAAc,+B,SCKhLA,EAAS,CAAC,CAAEC,GAAI,GAAK,CAAEA,GAAI,GAAK,CAAEA,GAAI,IAkE5C,SAASC,EAAT,GAAiE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,iBAAkBC,EAAiB,EAAjBA,cAC7C,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,oCAAD,OAAqCP,EAAKF,KAAMU,MAAK,SAAAC,GACxDJ,EAASI,EAAIC,UAEd,CAACV,EAAKF,MAETQ,EAAAA,EAAAA,YAAU,WACQ,IAAZN,EAAKF,IACPG,EAAiBG,KAElB,CAACA,EAAOJ,EAAKF,GAAIG,KAGlB,8BACE,kBACEU,UAAQ,EACRC,KAAK,QACLC,KAAK,OACLC,MAAM,QACNC,QAASX,IAAUF,EACnBc,SAAU,SAAAC,GACJA,EAAMC,OAAOH,SACfd,EAAiBG,OAIvB,gBAAKe,IAAKf,EAAOgB,IAAKpB,EAAKF,GAAIuB,UAAWC,EAAAA,YAAqBC,QAAQ,YAK7E,MAlGA,WACE,OAA0BpB,EAAAA,EAAAA,UAAS,IAAnC,eAAOqB,EAAP,KAAcC,EAAd,KACA,GAA8BtB,EAAAA,EAAAA,UAAS,IAAvC,eAAOuB,EAAP,KAAgBC,EAAhB,KACA,GAA0CxB,EAAAA,EAAAA,UAAS,IAAnD,eAAOD,EAAP,KAAsBD,EAAtB,KAEM2B,GAAWC,EAAAA,EAAAA,MAEXC,GAAoBC,EAAAA,EAAAA,cACxB,SAAAd,GChBuB,IAAAe,EDiBrBf,EAAMgB,iBACNL,GAASM,EAAAA,EAAAA,IAAQ,CAAEpC,IClBEkC,EDkBcR,EClBX,UAAOQ,EAAP,aAAc,IAAIG,MAAOC,YDkBNZ,MAAAA,EAAOE,QAAAA,EAAStB,MAAOF,KAAkBM,MAAK,WACvFP,EAAiB,IACjB0B,EAAW,IACXF,EAAS,SAGb,CAACD,EAAOE,EAASxB,EAAe0B,IAGlC,OACE,gBAAKP,UAAWC,EAAAA,UAAhB,UACE,gBAAKD,UAAWC,EAAAA,UAAhB,UACE,kBAAMD,UAAWC,EAAAA,KAAce,SAAUP,EAAzC,WACE,iBAAKT,UAAWC,EAAAA,QAAhB,WACE,kBAAOgB,QAAQ,QAAf,oBACA,kBACE1B,KAAK,OACLd,GAAG,QACHgB,MAAOU,EACPR,SAAU,SAAAC,GACRQ,EAASR,EAAMC,OAAOJ,QAExBH,UAAQ,QAIZ,iBAAKU,UAAWC,EAAAA,QAAhB,WACE,kBAAOgB,QAAQ,UAAf,sBACA,qBACExC,GAAG,UACHyC,KAAK,IACLzB,MAAOY,EACPV,SAAU,SAAAC,GACRU,EAAWV,EAAMC,OAAOJ,QAE1BH,UAAQ,OAIXd,EAAO2C,KAAI,SAAAxC,GAAI,OACd,SAACD,EAAD,CAA2BC,KAAMA,EAAMC,iBAAkBA,EAAkBC,cAAeA,GAAxEF,EAAKF,QAGzB,gBAAKuB,UAAWC,EAAAA,QAAhB,UACE,mBAAQV,KAAK,SAASS,UAAU,MAAhC,4BExDZ,MAJA,WACE,OAAO,SAAC,EAAD","sources":["webpack://blog-post/./src/components/posts/PostForm.module.css?6696","components/posts/PostForm.js","utils.js","pages/NewPost.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PostForm_container__DU8bd\",\"form_card\":\"PostForm_form_card__ZLGG7\",\"control\":\"PostForm_control__P+T+9\",\"actions\":\"PostForm_actions__CIivR\",\"radio_image\":\"PostForm_radio_image__Q2Hik\"};","import { useCallback, useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addPost } from 'store/postSlice';\nimport { generateKey } from 'utils';\nimport classes from './PostForm.module.css';\n\nconst images = [{ id: 1 }, { id: 2 }, { id: 3 }];\n\nfunction PostForm() {\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [selectedImage, setSelectedImage] = useState('');\n\n  const dispatch = useDispatch();\n\n  const submitFormHandler = useCallback(\n    event => {\n      event.preventDefault();\n      dispatch(addPost({ id: generateKey(title), title, content, image: selectedImage })).then(() => {\n        setSelectedImage('');\n        setContent('');\n        setTitle('');\n      });\n    },\n    [title, content, selectedImage, dispatch]\n  );\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.form_card}>\n        <form className={classes.form} onSubmit={submitFormHandler}>\n          <div className={classes.control}>\n            <label htmlFor='title'>Title</label>\n            <input\n              type='text'\n              id='title'\n              value={title}\n              onChange={event => {\n                setTitle(event.target.value);\n              }}\n              required\n            />\n          </div>\n\n          <div className={classes.control}>\n            <label htmlFor='content'>Content</label>\n            <textarea\n              id='content'\n              rows='5'\n              value={content}\n              onChange={event => {\n                setContent(event.target.value);\n              }}\n              required\n            />\n          </div>\n\n          {images.map(item => (\n            <ImageOption key={item.id} item={item} setSelectedImage={setSelectedImage} selectedImage={selectedImage} />\n          ))}\n\n          <div className={classes.actions}>\n            <button type='submit' className='btn'>\n              Save\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nfunction ImageOption({ item, setSelectedImage, selectedImage }) {\n  const [image, setImage] = useState('');\n\n  useEffect(() => {\n    fetch(`https://picsum.photos/720?random=${item.id}`).then(res => {\n      setImage(res.url);\n    });\n  }, [item.id]);\n\n  useEffect(() => {\n    if (item.id === 1) {\n      setSelectedImage(image);\n    }\n  }, [image, item.id, setSelectedImage]);\n\n  return (\n    <label>\n      <input\n        required\n        type='radio'\n        name='test'\n        value='small'\n        checked={image === selectedImage}\n        onChange={event => {\n          if (event.target.checked) {\n            setSelectedImage(image);\n          }\n        }}\n      />\n      <img src={image} alt={item.id} className={classes.radio_image} loading='lazy' />\n    </label>\n  );\n}\n\nexport default PostForm;\n","export const generateKey = pre => `${pre}_${new Date().getTime()}`;\n","import PostForm from 'components/posts/PostForm';\n\nfunction NewPost() {\n  return <PostForm />;\n}\n\nexport default NewPost;\n"],"names":["images","id","ImageOption","item","setSelectedImage","selectedImage","useState","image","setImage","useEffect","fetch","then","res","url","required","type","name","value","checked","onChange","event","target","src","alt","className","classes","loading","title","setTitle","content","setContent","dispatch","useDispatch","submitFormHandler","useCallback","pre","preventDefault","addPost","Date","getTime","onSubmit","htmlFor","rows","map"],"sourceRoot":""}